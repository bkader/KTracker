local a,b="LibStub",2;local c=_G[a]if not c or c.minor<b then c=c or{libs={},minors={}}_G[a]=c;c.minor=b;function c:NewLibrary(d,e)assert(type(d)=="string","Bad argument #2 to `NewLibrary' (string expected)")e=assert(tonumber(strmatch(e,"%d+")),"Minor version must either be a number or contain a number.")local f=self.minors[d]if f and f>=e then return nil end;self.minors[d],self.libs[d]=e,self.libs[d]or{}return self.libs[d],f end;function c:GetLibrary(d,g)if not self.libs[d]and not g then error(("Cannot find a library instance of %q."):format(tostring(d)),2)end;return self.libs[d],self.minors[d]end;function c:IterateLibraries()return pairs(self.libs)end;setmetatable(c,{__call=c.GetLibrary})end
